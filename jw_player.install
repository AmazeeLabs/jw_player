<?php
// $Id: jw_player.install,v 1.14 2010/11/21 09:24:41 webchick Exp $

/**
 * @file
 * Install, update and uninstall functions for the JW Player module.
 */

/**
 * Implements hook_field_schema().
 */
function jw_player_field_schema($field) {
  return array(
    'columns' => array(
      'fid' => array(
        'description' => 'The {file_managed}.fid being referenced in this field.',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
      'thumbnail_offset' => array(
        'description' => "Alternative image text, for the image's 'alt' attribute.",
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'preview_image_fid' => array(
        'description' => 'The {file_managed}.fid being referenced in this field.',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
    ),
    'indexes' => array(
      'fid' => array('fid'),
    ),
    'foreign keys' => array(
      'fid' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );
}

/**
 * Implements hook_requirements().
 */
function jw_player_requirements($phase) {
  $requirements = array();

  // Ensure translations don't break at install time
  $t = get_t();

  $directory = libraries_get_path('jwplayer');

  // Check the exisence of the JW Player Library
  if ($phase == 'runtime') {
    $errors = array();

    foreach (array('player.swf', 'jwplayer.js') as $file) {
      if (!file_exists($directory . '/' . $file)) {
        $errors[] = $t('The file %file is not present in the directory %directory', array('%file' => $file, '%directory' => $directory));
      }
    }

    $requirements['jw_player'] = array(
      'title' => $t('JW Player'),
      'value' => !empty($errors) ? theme('item_list', array('items'=> $errors)) . $t('Please consult INSTALL.txt for installation instructions.') : $t('Installed correctly'),
      'severity' => !empty($errors) ? REQUIREMENT_ERROR : REQUIREMENT_OK,
    );
  }

  return $requirements;
}